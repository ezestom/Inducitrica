---
import LanguagePicker from "@/components/LanguagePicker.astro";
import Logo from "@/components/Logo.astro";
import menu from "@/config/menu.json";

import {
  getLangFromUrl,
  useTranslations,
  useTranslatedPath,
} from "../../i18n/utils";
import HeaderLink from "../components/HeaderLink.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

export interface ChildNavigationLink {
  name: string;
  url: string;
}

export interface NavigationLink {
  name: string;
  url: string;
  hasChildren?: boolean;
  children?: ChildNavigationLink[];
}
const links = [
  {
    ref: "01",
    name: t("nav.home"),
    href: "/home",
  },
  {
    ref: "02",
    name: t("nav.about"),
    href: "/about",
  },
  {
    ref: "03",
    name: t("nav.contact"),
    href: "/contact",
  },
];

const { main }: { main: NavigationLink[] } = menu;
const { pathname } = Astro.url;
---

<header
  class="header fixed top-0 right-0 left-0 xl:max-w-[1400px] xl:rounded-b-3xl mx-auto w-full row justify-center shadow flex px-2 z-50">
  <nav class="navbar container">
    <!-- logo -->
    <div class="order-0 flex-1 lg:flex-none">
      <Logo />
    </div>
    <!-- navbar toggler -->
    <!-- <div class="order-2 flex items-center lg:hidden"> -->
    <div class="lg:hidden flex">
      <LanguagePicker transition:persist />
    </div>
    <input id="nav-toggle" type="checkbox" class="hidden" />
    <label
      id="show-button"
      for="nav-toggle"
      class="order-2 flex cursor-pointer ml-2 items-center lg:order-1 lg:hidden">
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
    </label>

    <label
      id="hide-button"
      for="nav-toggle"
      class="order-2 hidden cursor-pointer ml-2 items-center lg:order-1">
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <polygon
          points="11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2"
          transform="rotate(45 10 10)"></polygon>
      </svg>
    </label>
    <!-- /navbar toggler -->

    <ul
      id="nav-menu"
      class="navbar-nav order-3 hidden w-full lg:order-1 lg:flex lg:w-auto lg:space-x-2 text-white">
      {
        links.map((link: any) => (
          <HeaderLink
            href={link.href}
            locale={lang}
            class="nav-link group inline-flex text-base tracking-tight text-primary-950 transition focus-visible:outline-none dark:text-primary-200 font-black ">
            <div class="flex items-center gap-4">
              <span class="group-hover:opacity-75">{link.name}</span>
            </div>
          </HeaderLink>
        ))
      }
      <!-- <li class="nav-item mt-2 lg:hidden">
        <a class="btn btn-white btn-sm border-border" href="/contact">
          Contactanos</a
        >
      </li> -->
    </ul>
    <div
      class="order-1 ml-auto hidden items-center md:order-2 md:ml-0 lg:flex gap-x-1">
      <!-- <a class="btn btn-white btn-sm" href="/contact"> Contactanos</a> -->
      <LanguagePicker transition:persist />
    </div>
  </nav>
</header>

<style>
  @media screen and (min-width: 768px) {
    header {
      animation: marginTop linear both;
      animation-timeline: scroll();
      animation-range: 0 50px;
    }
    @keyframes marginTop {
      from {
        margin-top: 0;
      }
      to {
        margin-top: 0.5rem;
        border-radius: 1.5rem;
      }
    }
  }
</style>

<script is:inline>
  document.querySelectorAll(".dropdown-button").forEach((button) => {
    button.addEventListener("click", (e) => {
      const dropdown = e.target.nextElementSibling;
      dropdown.classList.toggle(
        dropdown.style === "hidden" ? "block" : "hidden"
      );
    });
  });

  //sticky header
  document.addEventListener("astro:page-load", () => {
    const header = document.querySelector(".header");
    window.addEventListener("scroll", () => {
      if (window.scrollY > 0) {
        header.classList.add("header-sticky");
      } else {
        header.classList.remove("header-sticky");
      }
    });
  });
</script>
